version: '2'

services:
  docker-backbone:
    build: ./
    image: docker-backbone
    container_name: docker-backbone
    volumes:
      - "./config:/app/config"
      - "/tmp/projects:/tmp/projects"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: always
    networks:
      - back
      - front
    environment:
      VIRTUAL_HOST: deployer.localhost
      VIRTUAL_PORT: 443
      LETSENCRYPT_HOST: deployer.localhost
      LETSENCRYPT_EMAIL: admin@localhost.com

  nginx-server:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./certs:/etc/nginx/certs
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - back
      - front

  lets-encrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: lets-encrypt
    restart: always
    depends_on:
      - nginx-server
    volumes:
      - ./certs:/etc/nginx/certs:rw
    volumes_from:
      - nginx-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - back
      - front

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '-config.file=/etc/prometheus/prometheus.yml'
      - '-storage.local.path=/prometheus'
      - '-alertmanager.url=http://alertmanager:9093'
      - '-storage.local.memory-chunks=100000'
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '-config.file=/etc/alertmanager/config.yml'
      - '-storage.path=/alertmanager'
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter
    container_name: nodeexporter
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  cadvisor:
    image: google/cadvisor:v0.24.1
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"

  nginxexporter:
    image: fish/nginx-exporter
    container_name: nginxexporter
    restart: unless-stopped
    entrypoint: ["./nginx_exporter", "-nginx.scrape_uri", "http://nginx-proxy/nginx_status"]
    networks:
      - monitor-net
      - back
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
    env_file:
      - user.config
    restart: unless-stopped
    environment:
      VIRTUAL_HOST: monitor.localhost
      VIRTUAL_PORT: 443
      LETSENCRYPT_HOST: monitor.localhost
      LETSENCRYPT_EMAIL: admin@localhost.com
    networks:
      - monitor-net
      - front
      - back
    labels:
      org.label-schema.group: "monitoring"

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  monitor-net:
    driver: bridge
  front:
    external:
      name: traffic_front
  back:
    external:
      name: traffic_back